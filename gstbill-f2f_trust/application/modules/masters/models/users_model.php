<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Users_model extends CI_Model {    private $table_name = 'users';    private $user_type_table = 'user_type';    function __construct() {        parent::__construct();        $this->load->database();    }    function insert_user($data) {        if ($this->db->insert($this->table_name, $data)) {            $user_id = $this->db->insert_id();            return $user_id;        }        return FALSE;    }    function update_user($data, $user_id) {        $this->db->where('id', $user_id);        if ($this->db->update($this->table_name, $data)) {            return TRUE;        }        return FALSE;    }    function delete_user($id, $data) {        $this->db->where('id', $id);        if ($this->db->update($this->table_name, $data)) {            return 1;        }        return 0;    }    function get_user_by_login($username, $password) {        //$password = $password;        $this->db->select('tab_1.*, tab_2.id AS user_type_id, tab_2.user_type_name');        $this->db->join($this->user_type_table . ' AS tab_2', 'tab_2.id = tab_1.user_type_id', 'LEFT');        $this->db->where('password = ', $password);        // $where = '(LOWER(username) = "' . strtolower($username) . '" OR LOWER(tab_1.email) = "' . strtolower($username) . '")';        $where = '(LOWER(username) = "' . strtolower($username) . '" )';        $this->db->where($where);        $this->db->where('tab_1.status', 1);        $this->db->where('tab_1.is_deleted', 0);        $this->db->group_by('tab_1.id');        $query = $this->db->get($this->table_name . ' AS tab_1');        if ($query->num_rows() == 1) {            return $query->row();        }        return NULL;    }    function get_user_by_id($user_id) {        $this->db->select('tab_1.*, tab_2.id AS user_type_id, tab_2.user_type_name');        $this->db->join($this->user_type_table . ' AS tab_2', 'tab_2.id = tab_1.user_type_id', 'LEFT');        $this->db->where('tab_1.id', $user_id);        $query = $this->db->get($this->table_name . ' AS tab_1');        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }    function get_userprofile_by_id($user_id) {        $this->db->select('*');        //$this->db->join($this->user_type_table . ' AS tab_2', 'tab_2.id = tab_1.user_type_id', 'LEFT');        $this->db->where('id', $user_id);        $query = $this->db->get($this->table_name);        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }    function is_user_available($username, $id = '') {        $this->db->select($this->table_name . '.id');        //$this->db->where($this->table_name . '.is_deleted', 0);        $this->db->where($this->table_name . '.status', 1);        $this->db->where('LCASE(username)', strtolower($username));        if (!empty($id))            $this->db->where('id !=', $id);        $query = $this->db->get($this->table_name);        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }    function is_email_address_available($email, $id = '') {        $this->db->select($this->table_name . '.id');        $this->db->where($this->table_name . '.is_deleted', 0);        $this->db->where($this->table_name . '.status', 1);        $this->db->where('LCASE(email_address)', strtolower($email));        if (!empty($id))            $this->db->where('id !=', $id);        $query = $this->db->get($this->table_name);        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }    function is_mobile_number_available($mobile, $id = '') {        $this->db->select($this->table_name . '.id');        $this->db->where($this->table_name . '.is_deleted', 0);        $this->db->where($this->table_name . '.status', 1);        $this->db->where('LCASE(mobile_number)', strtolower($mobile));        if (!empty($id))            $this->db->where('id !=', $id);        $query = $this->db->get($this->table_name);        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }    function get_all_users() {        $this->db->select('tab_1.*, tab_2.id AS user_type_id, tab_2.user_type_name');        $this->db->join($this->user_type_table . ' AS tab_2', 'tab_2.id = tab_1.user_type_id', 'LEFT');        $this->db->where('tab_1.is_deleted', 0);        $query = $this->db->get($this->table_name . ' AS tab_1');        if ($query->num_rows() > 0) {            return $query->result_array();        }        return NULL;    }}