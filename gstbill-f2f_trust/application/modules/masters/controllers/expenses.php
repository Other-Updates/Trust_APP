<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Expenses extends MX_Controller {    function __construct() {        parent::__construct();        if (!$this->user_auth->is_logged_in()) {            redirect($this->config->item('base_url') . 'users/login');        }        $main_module = 'dashboard';        $access_arr = array(            'dashboard/index' => array('view'),            'dashboard/add' => array('add'),            'dashboard/delete' => array('delete'),        );//        if (!$this->user_auth->is_permission_allowed($access_arr, $main_module)) {//            redirect($this->config->item('base_url'));//        }        $this->load->model('masters/expenses_model');        $this->template->write_view('session_msg', 'users/session_msg');    }    function index() {        $data = array();        $data['title'] = 'Dashboard';        $this->template->write_view('content', 'masters/expenses', $data);        $this->template->render();    }    function getExpensesCategory() {        $searchQuery = $this->input->post('query');        $searchString = "";        if (!(empty($searchQuery['generalSearch'])) && $searchQuery['generalSearch'] != "") {            $searchString = $searchQuery['generalSearch'];        }        $data['data'] = $this->expenses_model->get_all_expenses($searchString);        $total_records = count($data['data']);        $pages = ceil($total_records / 10);        $data['meta'] = array(            "page" => 1,            "pages" => $pages,            "perpage" => -1,            "total" => $total_records,            "sort" => "asc",            "field" => "id"        );        //print_r($data);        echo json_encode($data);    }    function add() {        $this->template->write_view('content', 'masters/add_expenses');        $this->template->render();    }    function add_expense_category() {        //$expense_type = $this->input->post('expense_type');        $expense_category = $this->input->post('expense_category');        $expense_status = $this->input->post('expense_status');        $result = $this->expenses_model->is_expense_category_available($expense_category);        if (!empty($result[0]['id'])) {            //echo 'yes';            $data['status'] = "expense_category_exists";        } else {            //echo 'no';            $created_date = date('Y-m-d H:i:s');            $expense_category_data = array(                //'expense_type' => $expense_type,                'expense_category' => $expense_category,                'status' => $expense_status,                'created_date' => $created_date            );            $insert = $this->expenses_model->insert_expense_category($expense_category_data);            $this->session->set_flashdata('flashSuccess', 'Expense category Added');            if ($insert) {                $status = "success";            } else {                $status = "failed";            }            $data['status'] = $status;        }        echo json_encode($data);    }    function edit($id) {        $this->template->write_view('content', 'masters/edit_expenses');        $this->template->render();    }    public function getExpenseCategoryData() {        $id = $this->input->get("id");        $data = $this->expenses_model->get_expense_category_by_id($id);        echo json_encode($data);    }    public function edit_expense_category() {        //$expense_type = $this->input->post('expense_type');        $expense_category = $this->input->post('expense_category');        $expense_status = $this->input->post('expense_status');        $id = $this->input->post("expense_category_id");        $client_id = $this->user_auth->get_user_id();        $result = $this->expenses_model->is_expense_category_available($expense_category, $id);        if (!empty($result[0]['id'])) {            //echo 'yes';            $data['status'] = "expense_category_exists";        } else {            //echo 'no';            $updated_date = date('Y-m-d H:i:s');            $expense_category_data = array(                //'expense_type' => $expense_type,                'expense_category' => $expense_category,                'status' => $expense_status,                'updated_date' => $updated_date            );            $update = $this->expenses_model->update_expense_category($expense_category_data, $id);            $this->session->set_flashdata('flashSuccess', 'Expense category Updated');            if ($update) {                $status = "success";            } else {                $status = "failed";            }            $data['status'] = $status;        }        echo json_encode($data);    }    function delete($id) {        $id = $this->input->post("id");        $data = array('is_deleted' => 1);        $delete = $this->expenses_model->delete_expense_category($id, $data);        if ($delete == 1) {            $this->session->set_flashdata('flashSuccess', 'Expense category deleted!');            echo '1';        } else {            $this->session->set_flashdata('flashError', 'Operation Failed!');            echo '0';        }    }    function view($id) {        $this->template->write_view('content', 'masters/view_expenses');        $this->template->render();    }}